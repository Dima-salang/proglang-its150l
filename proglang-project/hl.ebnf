program = { declaration } EOF ;

declaration = varDeclaration | statement ;
varDeclaration = IDENTIFIER COLON TYPE SEMICOLON ;
assignment = IDENTIFIER COLON_EQUAL expression SEMICOLON ;
type = INTEGER | DOUBLE | STRING ;

statement = exprStmt | outputStmt | ifStmt ;
exprStmt = expression SEMICOLON ;
outputStmt = OUTPUT PRINT_OP expression SEMICOLON ;
ifStmt = IF LEFT_PAREN comparison RIGHT_PAREN NEWLINE INDENT statement DEDENT ;

output = OUTPUT PRINT_OP expression SEMICOLON ;

block = NEWLINE INDENT { statement } DEDENT ;

expression = assignment ;
assignment = IDENTIFIER COLON_EQUAL assignment | equality ;
equality = comparison { (EQUAL_EQUAL | BANG_EQUAL) comparison } ;
comparison = term { (GREATER | GREATER_EQUAL | LESS | LESS_EQUAL) term } ;
term = factor { (PLUS | MINUS) factor } ;
factor = unary { (STAR | SLASH) unary } ;
unary = [BANG | MINUS] primary ;
primary = NUMBER | STRING | IDENTIFIER | LEFT_PAREN expression RIGHT_PAREN ;



